{"version":3,"sources":["Todo.js","NewTodoForm.js","TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","isEditing","task","toggleForm","bind","handleChange","handleUpdate","this","setState","e","preventDefault","updateTodo","id","target","name","value","className","onSubmit","type","onChange","onClick","toggleTodo","complete","deleteTodo","Component","NewTodoForm","handleSubmit","createTodo","uuidv4","completed","htmlFor","placeholder","TodoList","todos","JSON","parse","window","localStorage","getItem","create","delete","update","toggleCompletion","newTodo","map","t","setItem","stringify","filter","updatedTask","todo","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0a8dbc1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Todo.css';\r\n\r\nclass Todo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isEditing: false, task: this.props.task };\r\n        this.toggleForm = this.toggleForm.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleUpdate = this.handleUpdate.bind(this);\r\n    }\r\n    toggleForm() {\r\n        this.setState({ isEditing: !this.state.isEditing });\r\n    }\r\n    handleUpdate(e) {\r\n        e.preventDefault();\r\n        this.props.updateTodo(this.props.id, this.state.task);\r\n        this.setState({ isEditing: false });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    render() {\r\n        let result;\r\n        if (this.state.isEditing) {\r\n            result = (\r\n                <div className=\"Todo\">\r\n                    <form className=\"Todo-edit-form\" onSubmit={this.handleUpdate}>\r\n                        <input type=\"text\" value={this.state.task} name=\"task\" onChange={this.handleChange}></input>\r\n                        <button>Save</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            result = (\r\n                < div className=\"Todo\" >\r\n                    <li onClick={() => { this.props.toggleTodo(this.props.id) }} className={this.props.complete ? 'Todo-task completed' : \"Todo-task\"}>{this.props.task}</li>\r\n                    <div className=\"Todo-buttons\">\r\n                        <button onClick={this.toggleForm}>\r\n                            <i className=\"fas fa-pen\"></i>\r\n                        </button>\r\n                        <button onClick={this.props.deleteTodo}>\r\n                            <i className=\"fas fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div >\r\n            )\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './NewTodoForm.css'\r\n\r\nclass NewTodoForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { task: \"\" }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.createTodo({ ...this.state, id: uuidv4(), completed: false });\r\n        this.setState({ task: \"\" });\r\n    }\r\n    render() {\r\n        return (\r\n            <form className=\"NewTodoForm\" onSubmit={this.handleSubmit}>\r\n                <label htmlFor=\"task\">New Todo</label>\r\n                <input name=\"task\" onChange={this.handleChange} value={this.state.task} id=\"task\" type=\"text\" placeholder=\"New Todo\"></input>\r\n                <button>Add Todo</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewTodoForm;","import React, { Component } from 'react';\r\nimport Todo from './Todo.js';\r\nimport NewTodoForm from './NewTodoForm.js';\r\nimport './TodoList.css'\r\n\r\nclass TodoList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { todos: JSON.parse(window.localStorage.getItem(\"todos\")) || [] }\r\n        this.create = this.create.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.update = this.update.bind(this);\r\n        this.toggleCompletion = this.toggleCompletion.bind(this);\r\n    }\r\n    create(newTodo) {\r\n        let todos = this.state.todos.map(t => t);\r\n        this.setState({ todos: [...todos, newTodo] });\r\n        window.localStorage.setItem('todos', JSON.stringify([...todos, newTodo]));\r\n    }\r\n    delete(id) {\r\n        let todos = this.state.todos.filter(t => {\r\n            return t.id !== id\r\n        })\r\n        this.setState({ todos: todos });\r\n        window.localStorage.setItem('todos', JSON.stringify(todos));\r\n    }\r\n    update(id, updatedTask) {\r\n        let todos = this.state.todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                console.log({ task: updatedTask, id: todo.id });\r\n                return { task: updatedTask, id: todo.id };\r\n            }\r\n            else {\r\n                return todo;\r\n            }\r\n        })\r\n        this.setState({ todos: todos });\r\n        window.localStorage.setItem('todos', JSON.stringify(todos));\r\n    }\r\n    toggleCompletion(id) {\r\n        let todos = this.state.todos.map((todo) => {\r\n            if (todo.id === id) {\r\n                return { task: todo.task, id: todo.id, completed: !todo.completed }\r\n            }\r\n            else {\r\n                return todo;\r\n            }\r\n        })\r\n        this.setState({ todos: todos });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"TodoList\" >\r\n                <h1>Todo List! <span>A Simple React Todo List App.</span></h1>\r\n                <ul>\r\n                    {this.state.todos.map(t => <Todo toggleTodo={this.toggleCompletion} complete={t.completed} key={t.id} id={t.id} updateTodo={this.update} deleteTodo={() => this.delete(t.id)} task={t.task} />)}\r\n                </ul>\r\n                <NewTodoForm createTodo={this.create} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport React, { Component } from 'react';\nimport TodoList from './TodoList';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"\">\n        <TodoList />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}